<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>63.0</apiVersion>
    <decisions>
        <description>uses the first 3 digits of the id to determine which object to look up</description>
        <name>What_Object_is_this_from</name>
        <label>What Object is this from?</label>
        <locationX>446</locationX>
        <locationY>134</locationY>
        <defaultConnectorLabel>Unknown</defaultConnectorLabel>
        <rules>
            <name>Account</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>fLeft3DigitsofSFID</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>001</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Find_the_Account</targetReference>
            </connector>
            <label>Account</label>
        </rules>
        <rules>
            <name>Opportunity</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>fLeft3DigitsofSFID</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>006</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Find_the_Opp</targetReference>
            </connector>
            <label>Opportunity</label>
        </rules>
        <rules>
            <name>Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>fLeft3DigitsofSFID</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>500</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Find_the_Case</targetReference>
            </connector>
            <label>Case</label>
        </rules>
    </decisions>
    <description>Use this in combination with a slack workflow to make a record channel appear in salesforce. V2 to work with existing record triggered flow.</description>
    <environments>Default</environments>
    <formulas>
        <description>first 3 digits. 001 = Account. 006.= Opportunity. 500 is case if we need it.</description>
        <name>fLeft3DigitsofSFID</name>
        <dataType>String</dataType>
        <expression>LEFT({!inputSFRecordIDfromSlack},3)</expression>
    </formulas>
    <interviewLabel>AL Lightning Channel from Slack {!$Flow.CurrentDateTime}</interviewLabel>
    <label>AL Lightning Channel from Slack</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>gets the account from the slack workflow</description>
        <name>Find_the_Account</name>
        <label>Find the Account</label>
        <locationX>50</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Acct</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>inputSFRecordIDfromSlack</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>gets the case from the slack workflow</description>
        <name>Find_the_Case</name>
        <label>Find the Case</label>
        <locationX>578</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Case_Create_RC_Swarm</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>inputSFRecordIDfromSlack</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>gets the opportunity from the slack workflow</description>
        <name>Find_the_Opp</name>
        <label>Find the Opp</label>
        <locationX>314</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Oppty</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>inputSFRecordIDfromSlack</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Stamps the field value for the slack channel ID which in turn calls the next record triggered flow. Theoretically the better route is to call the subflow, but this route would leave the value on the field in case you need it for anything.</description>
        <name>Update_Acct</name>
        <label>Update Acct</label>
        <locationX>50</locationX>
        <locationY>350</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>inputSFRecordIDfromSlack</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>demo_Slack_Record_Channel_ID__c</field>
            <value>
                <elementReference>inputSlackChannelID</elementReference>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <description>Stamps the field value for the slack channel ID which in turn calls the next record triggered flow. Theoretically the better route is to call the subflow, but this route would leave the value on the field in case you need it for anything.</description>
        <name>Update_Oppty</name>
        <label>Update Oppty</label>
        <locationX>314</locationX>
        <locationY>350</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>inputSFRecordIDfromSlack</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>demo_Slack_Record_Channel_ID__c</field>
            <value>
                <elementReference>inputSlackChannelID</elementReference>
            </value>
        </inputAssignments>
        <object>Opportunity</object>
    </recordUpdates>
    <start>
        <locationX>320</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>What_Object_is_this_from</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <description>Subflow to create the backend objects required for it to appear in lightning.</description>
        <name>Case_Create_RC_Swarm</name>
        <label>Create RC Swarm</label>
        <locationX>578</locationX>
        <locationY>350</locationY>
        <flowName>AL_Record_Channel_Swarm_Component</flowName>
        <inputAssignments>
            <name>inputChannelSlackID</name>
            <value>
                <elementReference>inputSlackChannelID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>inputRecordID</name>
            <value>
                <elementReference>inputSFRecordIDfromSlack</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>inputRecordName</name>
            <value>
                <elementReference>Find_the_Case.CaseNumber</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <variables>
        <description>The ID of the record that you want to map into lightning</description>
        <name>inputSFRecordIDfromSlack</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>ID of the slack channel to map</description>
        <name>inputSlackChannelID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
